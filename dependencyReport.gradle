dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

dependencyUpdates.outputFormatter='json'

task createDependencyReport(dependsOn: dependencyUpdates) {
    doLast {
        copy {
            from "${buildDir}/dependencyUpdates/report.json"
            into "${sourceSets['main'].output.resourcesDir}"
        }
    }
}

processResources.dependsOn createDependencyReport
processResources.mustRunAfter createDependencyReport
